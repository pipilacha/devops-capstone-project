#
# This pipeline needs the following tasks from Tekton Hub
#   - git-clone
#   - flake8
#

# 
# Task Name 	Build After 	Message
# clone 	- 	Cloning the repo $(params.repo-url)
# lint 	clone 	Calling Flake8 linter
# tests 	clone 	Running unit tests with PyUnit
# build 	lint, tests 	Building image for $(params.repo-url)
# deploy 	build 	Deploying $(params.branch) branch of $(params.repo-url)
#

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:  
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: repo-url
    - name: branch
      default: main
    - name: build-image
  tasks:
    - name: init
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: cleanup

    - name: clone
      workspaces:
        - name: output
          workspace: pipeline-workspace          
      taskRef:
        name: git-clone
      params:
      - name: url
        value: $(params.repo-url)
      - name: revision
        value: $(params.branch)
      runAfter:
        - init
    
    - name: lint
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: flake8
      params:
      - name: image
        value: "python:3.8-slim"
      - name: args
        value: ["--count","--max-complexity=10","--max-line-length=127","--statistics"]
      runAfter:
        - clone

    - name: tests
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: nose
      params:
      - name: database_uri
        value: "sqlite:///test.db"
      - name: args
        value: "-v --with-spec --spec-color"
      runAfter:
        - clone

    - name: build
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
      - name: IMAGE
        value: "$(params.build-image)"
      runAfter:
        - tests
        - lint
    
    - name: deploy
      workspaces:
        - name: manifest-dir
          workspace: pipeline-workspace
      taskRef:
        name: openshift-client
        kind: ClusterTask
      params:
      - name: SCRIPT 
        value: |
          echo "Updating manifest..."
          sed -i "s|IMAGE_NAME_HERE|$(params.build-image)|g" deploy/deployment.yaml
          cat deploy/deployment.yaml
          echo "Deploying to OpenShift..."
          oc apply -f deploy/
          oc get pods -l app=accounts
      runAfter:
        - build

